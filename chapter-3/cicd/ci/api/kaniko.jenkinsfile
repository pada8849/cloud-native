localIP="192.168.11.14"
imageurl="kinshy-docker.pkg.coding.net/south/do"
pipeline {
    agent any;
    tools {
      maven 'maven-3.6.3'
    }
    stages{
      stage ('并行任务'){
        parallel {
          stage('buildJava') {
            agent {
              kubernetes {
                 yaml '''\
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    labels:
                      jenkins: agent
                  spec:
                    containers:
                    - name: jnlp
                      image: 10.0.1.125:5000/library/inbound-agent:3077.vd69cf116da_6f-3-jdk11
                      volumeMounts:
                        - mountPath: /app/jar
                          name: jenkins-jar
                        - mountPath: /tmp/.m2
                          name: jenkins-cache
                    volumes:
                    - name: jenkins-jar
                      persistentVolumeClaim:
                        claimName: jenkins-jar
                    - name: jenkins-cache
                      persistentVolumeClaim:
                        claimName: jenkins-cache
                  '''.stripIndent()
              }
            }
            steps {
                script {
                  def workdir = pwd();
                  def build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                  dir ("${workdir}"){
                          sh "ls && pwd"
                          sh "cd chapter-3/cicd/ci/api/code && git init &&  \
                          git remote add origin https://gitee.com/jishenghua/JSH_ERP.git &&  \
                          git config core.sparsecheckout true && \
                          echo 'jshERP-boot' >> .git/info/sparse-checkout && ls && \
                          git pull --depth 1 origin master && \
                          mv jshERP-boot/* . && cd .. && ls && \
                          cp -af settings.xml code && ls && \
                          cp -af application.yml code/src/main/resources/application.yml \
                          && rm -f code/src/main/resources/application.properties && \
                          cd code && ls "
                          sh "cd chapter-3/cicd/ci/api/code && \
                          mvn clean -s settings.xml && \
                          mvn -s settings.xml -e -B package"
                          sh "cd chapter-3/cicd/ci/api && chmod +x copy.sh && ./copy.sh"
                  }
                }
            }
            agent {
              kubernetes {
                 yaml '''\
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    labels:
                      jenkins: executor
                  spec:
                    containers:
                    - name: kaniko
                      image: 10.0.1.125:5000/library/executor:debug
                      volumeMounts:
                        - mountPath: /app/jar
                          name: jenkins-jar
                    volumes:
                    - name: jenkins-jar
                      persistentVolumeClaim:
                        claimName: jenkins-jar
                  '''.stripIndent()
              }
            }
            container('kaniko'){
                steps {
                    script {
                     sh '/kaniko/executor -f Dockerfile -c . --destination=your_registry/your_repo:tag'
                    }
                }
            }

          }
        }
      }
    }
}
